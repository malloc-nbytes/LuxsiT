struct Point =
  with x: i32,
  with y: i32,

impl Point =
  with construct x: i32 -> y: i32 :: Point =
    ret Point { x, y };

  with destruct :: () ->
    ret ();

  with proc change_xy x: i32 -> y: i32 :: () =
    self.x = x;
    let.y = y;
    ret ();

proc test_func a: bool -> b: bool -> cond: (proc bool -> bool :: bool) :: bool =
  if cond a b then
    ret a;
  end
  ret b;

proc print_point p: &Point :: () =
  print p.x;
  print p.y;
  ret ();

proc main :: i32 =
  let x: i32 = 5;
  let y: i32 = 3;
  let p: Point = Point x y;

  print_point &p;

  for i: i32 = 0, i < 10, i += 1 do
    println i;
  end

  let x := 4;

  if x > 3 then
    x = x + 3;
  else if x < 3 then
    x = x - 3;
  else
    x = x + 1;
  end

  let cond: (proc a: bool -> b: bool :: bool) = ret a > b;

  let _: bool = test_func true false cond;

  ret 0;
