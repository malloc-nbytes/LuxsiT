section .text
dump:
    mov     r8, -3689348814741910323
    sub     rsp, 40
    mov     BYTE [rsp+31], 10
    lea     rcx, [rsp+30]
.L2:
    mov     rax, rdi
    mul     r8
    mov     rax, rdi
    shr     rdx, 3
    lea     rsi, [rdx+rdx*4]
    add     rsi, rsi
    sub     rax, rsi
    mov     rsi, rcx
    sub     rcx, 1
    add     eax, 48
    mov     BYTE [rcx+1], al
    mov     rax, rdi
    mov     rdi, rdx
    cmp     rax, 9
    ja      .L2
    lea     rdx, [rsp+32]
    mov     edi, 1
    sub     rdx, rsi
    mov     rax, 1
    syscall
    add     rsp, 40
    ret
global _start
_start:
    mov rax, 1
    push rax
    mov rax, 2
    push rax
    mov rax, QWORD [rsp + 8]
    push rax
    mov rax, 2
    push rax
    pop rdi
    pop rax
    add rax, rdi
    push rax
    pop rdi
    mov QWORD [rsp + 8], rdi
    mov rax, 3
    push rax
    mov rax, 1
    push rax
    pop rdi
    pop rax
    sub rax, rdi
    push rax
    pop rdi
    mov QWORD [rsp + 0], rdi
    mov rax, QWORD [rsp + 8]
    push rax
    pop rdi
    cmp rdi, 0
    je if_end_0
    jmp if_true_0
if_true_0:
    mov rax, 99
    push rax
    pop rdi
    mov QWORD [rsp + 8], rdi
    mov rax, QWORD [rsp + 8]
    push rax
    pop rdi
    call dump
    jmp if_end_0
if_end_0:
    mov rax, QWORD [rsp + 8]
    push rax
    pop rdi
    call dump
    ; Obligatory exit
    mov rax, 60
    mov rdi, 0
    syscall